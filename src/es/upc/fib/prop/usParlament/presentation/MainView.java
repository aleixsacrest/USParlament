/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.upc.fib.prop.usParlament.presentation;

import es.upc.fib.prop.usParlament.misc.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.concurrent.ExecutionException;

/**
 *
 * @author miquel
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    public MainView(PresentationController precon) {
        pc = precon;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainWindow = new javax.swing.JTabbedPane();
        mainView = new javax.swing.JPanel();
        congressManagementView = new javax.swing.JPanel();
        MPTablePanel = new javax.swing.JScrollPane();
        currentMPsTable = new javax.swing.JTable();
        buttonsPanel = new javax.swing.JPanel();
        addMPButton = new javax.swing.JButton();
        modifyMPButton = new javax.swing.JButton();
        deleteMPButton = new javax.swing.JButton();
        loadCongressButton = new javax.swing.JButton();
        saveCongressButton = new javax.swing.JButton();
        newCongressButton = new javax.swing.JButton();
        attrDefPanel = new javax.swing.JScrollPane();
        attrDefinitionsTable = new javax.swing.JTable();
        attrDefinitionsPanel = new javax.swing.JPanel();
        newAttrDefButton = new javax.swing.JButton();
        modifyAttrDefButton = new javax.swing.JButton();
        deleteAttrDefButton = new javax.swing.JButton();
        attrDefinitionsLabel = new javax.swing.JLabel();
        currentCongressLabel = new javax.swing.JLabel();
        CommunityManagement = new javax.swing.JPanel();
        communitiesPanel = new javax.swing.JPanel();
        labelCommunities = new javax.swing.JLabel();
        labelMPs = new javax.swing.JLabel();
        addMPToCommunityButton = new javax.swing.JButton();
        deleteMPfromCommunityButton = new javax.swing.JButton();
        showMPDataButton = new javax.swing.JButton();
        communitiesTablePanel = new javax.swing.JScrollPane();
        communitiesTable = new javax.swing.JTable();
        MPsInCommuntiyPanel = new javax.swing.JScrollPane();
        MPsInCommunityTable = new javax.swing.JTable();
        loadPartitionButton = new javax.swing.JButton();
        savePartitionButton = new javax.swing.JButton();
        algorithmLabel = new javax.swing.JLabel();
        chooseAlgorithmComboBox = new javax.swing.JComboBox();
        argumentLabel = new javax.swing.JLabel();
        argumentTextField = new javax.swing.JTextField();
        calculateCommunitiesButton = new javax.swing.JButton();
        algorithmProgressBar = new javax.swing.JProgressBar();
        CompareView = new javax.swing.JPanel();
        CommunityPanel1 = new javax.swing.JPanel();
        scrollPaneCommunityList1 = new javax.swing.JScrollPane();
        communityList1CommunitiesList = new javax.swing.JList();
        list1Label1 = new javax.swing.JLabel();
        list1Label2 = new javax.swing.JLabel();
        scrollPaneMPList1 = new javax.swing.JScrollPane();
        MPList1Table = new javax.swing.JTable();
        currentLoadedCongressLabel = new javax.swing.JLabel();
        currentCongressNameTextField = new javax.swing.JTextField();
        LoadCongressButton = new javax.swing.JButton();
        CommunityPanel2 = new javax.swing.JPanel();
        scrollPaneCommuntiyList2 = new javax.swing.JScrollPane();
        communityList2CommunitiesList = new javax.swing.JList();
        list2Label1 = new javax.swing.JLabel();
        list2Label2 = new javax.swing.JLabel();
        scrollPaneMPList2 = new javax.swing.JScrollPane();
        MPList2Table = new javax.swing.JTable();
        compareButton = new javax.swing.JButton();
        list1OptionsLabel = new javax.swing.JLabel();
        list1UseCurrentPartitionButton = new javax.swing.JButton();
        list1LoadPartitionButton = new javax.swing.JButton();
        list2OptionsLabel = new javax.swing.JLabel();
        list2UseCurrentPartitionButton = new javax.swing.JButton();
        list2LoadPartitionButton = new javax.swing.JButton();
        currentMPsPanel = new javax.swing.JPanel();
        MPsInCurrentCongressLabel = new javax.swing.JLabel();
        scrollPaneMPsCurrentCongressTable = new javax.swing.JScrollPane();
        MPsCurrentCongressTable = new javax.swing.JTable();
        showSelectedMPInfoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusCycleRoot(false);

        mainWindow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainWindowStateChanged(evt);
            }
        });

        javax.swing.GroupLayout mainViewLayout = new javax.swing.GroupLayout(mainView);
        mainView.setLayout(mainViewLayout);
        mainViewLayout.setHorizontalGroup(
            mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 792, Short.MAX_VALUE)
        );
        mainViewLayout.setVerticalGroup(
            mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );

        mainWindow.addTab("Main Page", mainView);

        MPTablePanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        MPTablePanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        MPTablePanel.setName(""); // NOI18N

        currentMPsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        currentMPsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        currentMPsTable.setName("currentMPsTable"); // NOI18N
        MPTablePanel.setViewportView(currentMPsTable);

        buttonsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addMPButton.setText("Add MP");
        addMPButton.setName("addMPButton"); // NOI18N
        addMPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMPButtonActionPerformed(evt);
            }
        });

        modifyMPButton.setText("Modify MP");
        modifyMPButton.setName("modifyMPButton"); // NOI18N
        modifyMPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyMPButtonActionPerformed(evt);
            }
        });

        deleteMPButton.setText("Delete MP");
        deleteMPButton.setName("deleteMPButton"); // NOI18N
        deleteMPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMPButtonActionPerformed(evt);
            }
        });

        loadCongressButton.setText("Load Congress");
        loadCongressButton.setName("loadCongressButton"); // NOI18N
        loadCongressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCongressButtonActionPerformed(evt);
            }
        });

        saveCongressButton.setText("Save Congress");
        saveCongressButton.setName("saveCongressButton"); // NOI18N
        saveCongressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCongressButtonActionPerformed(evt);
            }
        });

        newCongressButton.setText("New Congress");
        newCongressButton.setName("newCongressButton"); // NOI18N
        newCongressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCongressButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifyMPButton, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(deleteMPButton, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(loadCongressButton, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(saveCongressButton, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(newCongressButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addMPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifyMPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteMPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(loadCongressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveCongressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newCongressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        attrDefinitionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Importance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        attrDefinitionsTable.setColumnSelectionAllowed(true);
        attrDefinitionsTable.setName("attrDefinitionsTable"); // NOI18N
        attrDefinitionsTable.getTableHeader().setReorderingAllowed(false);
        attrDefPanel.setViewportView(attrDefinitionsTable);
        attrDefinitionsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        attrDefinitionsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        newAttrDefButton.setText("New Attr. Def.");
        newAttrDefButton.setName("newAttrDefButton"); // NOI18N
        newAttrDefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAttrDefButtonActionPerformed(evt);
            }
        });

        modifyAttrDefButton.setText("Modify Attr. Def.");
        modifyAttrDefButton.setName("modiftAttrDefButton"); // NOI18N
        modifyAttrDefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyAttrDefButtonActionPerformed(evt);
            }
        });

        deleteAttrDefButton.setText("Delete Attr. Def.");
        deleteAttrDefButton.setName("deleteAttrDefButton"); // NOI18N
        deleteAttrDefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAttrDefButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout attrDefinitionsPanelLayout = new javax.swing.GroupLayout(attrDefinitionsPanel);
        attrDefinitionsPanel.setLayout(attrDefinitionsPanelLayout);
        attrDefinitionsPanelLayout.setHorizontalGroup(
            attrDefinitionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attrDefinitionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attrDefinitionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newAttrDefButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifyAttrDefButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteAttrDefButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                .addContainerGap())
        );
        attrDefinitionsPanelLayout.setVerticalGroup(
            attrDefinitionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attrDefinitionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newAttrDefButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modifyAttrDefButton)
                .addGap(12, 12, 12)
                .addComponent(deleteAttrDefButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        attrDefinitionsLabel.setText("Attribute Definitions:");

        currentCongressLabel.setText("Current Congress' MPs");

        javax.swing.GroupLayout congressManagementViewLayout = new javax.swing.GroupLayout(congressManagementView);
        congressManagementView.setLayout(congressManagementViewLayout);
        congressManagementViewLayout.setHorizontalGroup(
            congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(congressManagementViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(congressManagementViewLayout.createSequentialGroup()
                        .addGroup(congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attrDefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                            .addGroup(congressManagementViewLayout.createSequentialGroup()
                                .addGroup(congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(attrDefinitionsLabel)
                                    .addComponent(currentCongressLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(attrDefinitionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MPTablePanel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        congressManagementViewLayout.setVerticalGroup(
            congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(congressManagementViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentCongressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MPTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(congressManagementViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attrDefinitionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(congressManagementViewLayout.createSequentialGroup()
                        .addComponent(attrDefinitionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(attrDefPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(congressManagementViewLayout.createSequentialGroup()
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainWindow.addTab("Congress Management", congressManagementView);
        congressManagementView.getAccessibleContext().setAccessibleName("");

        communitiesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelCommunities.setText("Communities");

        labelMPs.setText("MPs in community");

        addMPToCommunityButton.setText("Add MP to Community");
        addMPToCommunityButton.setName("addMPtoCommunityButton"); // NOI18N
        addMPToCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMPToCommunityButtonActionPerformed(evt);
            }
        });

        deleteMPfromCommunityButton.setText("Delete MP from Community");
        deleteMPfromCommunityButton.setName("deleteMPfromCommunityButton"); // NOI18N
        deleteMPfromCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMPfromCommunityButtonActionPerformed(evt);
            }
        });

        showMPDataButton.setText("Show MP Data");
        showMPDataButton.setName("deleteMPfromCommunityButton"); // NOI18N
        showMPDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMPDataButtonActionPerformed(evt);
            }
        });

        communitiesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        communitiesTablePanel.setViewportView(communitiesTable);

        MPsInCommunityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        MPsInCommuntiyPanel.setViewportView(MPsInCommunityTable);

        javax.swing.GroupLayout communitiesPanelLayout = new javax.swing.GroupLayout(communitiesPanel);
        communitiesPanel.setLayout(communitiesPanelLayout);
        communitiesPanelLayout.setHorizontalGroup(
            communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communitiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCommunities)
                    .addComponent(communitiesTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(communitiesPanelLayout.createSequentialGroup()
                        .addComponent(MPsInCommuntiyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addMPToCommunityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteMPfromCommunityButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(showMPDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(communitiesPanelLayout.createSequentialGroup()
                        .addComponent(labelMPs)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        communitiesPanelLayout.setVerticalGroup(
            communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communitiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCommunities)
                    .addComponent(labelMPs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(communitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MPsInCommuntiyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(communitiesPanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(addMPToCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteMPfromCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(showMPDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 109, Short.MAX_VALUE))
                    .addComponent(communitiesTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        loadPartitionButton.setText("Load Partition");
        loadPartitionButton.setName("loadPartitionButton"); // NOI18N
        loadPartitionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadPartitionButtonActionPerformed(evt);
            }
        });

        savePartitionButton.setText("Save Partition");
        savePartitionButton.setName("savePartitionButton"); // NOI18N
        savePartitionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePartitionButtonActionPerformed(evt);
            }
        });

        algorithmLabel.setText("Algorithm:");

        chooseAlgorithmComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseAlgorithmComboBox.setName("algorithmChooser"); // NOI18N

        argumentLabel.setText("Argument:");

        argumentTextField.setText("jTextField2");
        argumentTextField.setName("algorithmInfoTextBox"); // NOI18N

        calculateCommunitiesButton.setText("Calculate");
        calculateCommunitiesButton.setName("calculateCommunitiesButton"); // NOI18N
        calculateCommunitiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateCommunitiesButtonActionPerformed(evt);
            }
        });

        algorithmProgressBar.setName("algorithmProgressBar"); // NOI18N

        javax.swing.GroupLayout CommunityManagementLayout = new javax.swing.GroupLayout(CommunityManagement);
        CommunityManagement.setLayout(CommunityManagementLayout);
        CommunityManagementLayout.setHorizontalGroup(
            CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityManagementLayout.createSequentialGroup()
                        .addComponent(communitiesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadPartitionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(savePartitionButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(CommunityManagementLayout.createSequentialGroup()
                        .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algorithmLabel)
                            .addComponent(argumentLabel))
                        .addGap(2, 2, 2)
                        .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(algorithmProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(calculateCommunitiesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooseAlgorithmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(argumentTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CommunityManagementLayout.setVerticalGroup(
            CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityManagementLayout.createSequentialGroup()
                .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityManagementLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(loadPartitionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(savePartitionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CommunityManagementLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(communitiesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel)
                    .addComponent(chooseAlgorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CommunityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(argumentLabel)
                    .addComponent(argumentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculateCommunitiesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(algorithmProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        mainWindow.addTab("Community Management", null, CommunityManagement, "");

        CommunityPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        communityList1CommunitiesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        communityList1CommunitiesList.setName("communtiyList1"); // NOI18N
        scrollPaneCommunityList1.setViewportView(communityList1CommunitiesList);

        list1Label1.setText("List of Communities 1:");

        list1Label2.setText("Communtiy MPs:");

        scrollPaneMPList1.setName("MPsList1"); // NOI18N

        MPList1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        scrollPaneMPList1.setViewportView(MPList1Table);

        javax.swing.GroupLayout CommunityPanel1Layout = new javax.swing.GroupLayout(CommunityPanel1);
        CommunityPanel1.setLayout(CommunityPanel1Layout);
        CommunityPanel1Layout.setHorizontalGroup(
            CommunityPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommunityPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityPanel1Layout.createSequentialGroup()
                        .addGroup(CommunityPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list1Label1)
                            .addComponent(list1Label2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CommunityPanel1Layout.createSequentialGroup()
                        .addGroup(CommunityPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrollPaneMPList1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(scrollPaneCommunityList1))
                        .addContainerGap())))
        );
        CommunityPanel1Layout.setVerticalGroup(
            CommunityPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(list1Label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneCommunityList1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(list1Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneMPList1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        currentLoadedCongressLabel.setText("Currently loaded congress:");

        currentCongressNameTextField.setText("jTextField1");
        currentCongressNameTextField.setName("currentCongressNameTextField"); // NOI18N

        LoadCongressButton.setText("Load Congress");
        LoadCongressButton.setName("loadCongressButton"); // NOI18N

        CommunityPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        communityList2CommunitiesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        communityList2CommunitiesList.setName("nameList2"); // NOI18N
        scrollPaneCommuntiyList2.setViewportView(communityList2CommunitiesList);

        list2Label1.setText("List of Communities 2:");

        list2Label2.setText("Community MPs:");

        scrollPaneMPList2.setName("MPsList2"); // NOI18N

        MPList2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        scrollPaneMPList2.setViewportView(MPList2Table);

        javax.swing.GroupLayout CommunityPanel2Layout = new javax.swing.GroupLayout(CommunityPanel2);
        CommunityPanel2.setLayout(CommunityPanel2Layout);
        CommunityPanel2Layout.setHorizontalGroup(
            CommunityPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommunityPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityPanel2Layout.createSequentialGroup()
                        .addGroup(CommunityPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list2Label1)
                            .addComponent(list2Label2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CommunityPanel2Layout.createSequentialGroup()
                        .addGroup(CommunityPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrollPaneMPList2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(scrollPaneCommuntiyList2))
                        .addContainerGap())))
        );
        CommunityPanel2Layout.setVerticalGroup(
            CommunityPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(list2Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneCommuntiyList2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(list2Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneMPList2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        compareButton.setText("Compare");
        compareButton.setName("compareButton"); // NOI18N

        list1OptionsLabel.setText("List 1 options:");

        list1UseCurrentPartitionButton.setText("Use current partition");
        list1UseCurrentPartitionButton.setName("useCurrentPartitionList1Button"); // NOI18N

        list1LoadPartitionButton.setText("Load part. from memory");
        list1LoadPartitionButton.setName("loadPartitionList1Button"); // NOI18N

        list2OptionsLabel.setText("List 2 options:");

        list2UseCurrentPartitionButton.setText("Use current partition");
        list2UseCurrentPartitionButton.setName("useCurrentPartitionList2Button"); // NOI18N

        list2LoadPartitionButton.setText("Load part. from memory");
        list2LoadPartitionButton.setName("loadPartitionList2Button"); // NOI18N

        MPsInCurrentCongressLabel.setText("MPs in current Congress");

        scrollPaneMPsCurrentCongressTable.setName("MPsInCongressList"); // NOI18N

        MPsCurrentCongressTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        scrollPaneMPsCurrentCongressTable.setViewportView(MPsCurrentCongressTable);

        showSelectedMPInfoButton.setText("Show Selected MP info");
        showSelectedMPInfoButton.setName("selectedMPInfoButton"); // NOI18N

        javax.swing.GroupLayout currentMPsPanelLayout = new javax.swing.GroupLayout(currentMPsPanel);
        currentMPsPanel.setLayout(currentMPsPanelLayout);
        currentMPsPanelLayout.setHorizontalGroup(
            currentMPsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentMPsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(currentMPsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneMPsCurrentCongressTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(currentMPsPanelLayout.createSequentialGroup()
                        .addComponent(MPsInCurrentCongressLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(showSelectedMPInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addContainerGap())
        );
        currentMPsPanelLayout.setVerticalGroup(
            currentMPsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentMPsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MPsInCurrentCongressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneMPsCurrentCongressTable, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(showSelectedMPInfoButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout CompareViewLayout = new javax.swing.GroupLayout(CompareView);
        CompareView.setLayout(CompareViewLayout);
        CompareViewLayout.setHorizontalGroup(
            CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompareViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CommunityPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CommunityPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CompareViewLayout.createSequentialGroup()
                        .addComponent(currentLoadedCongressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentCongressNameTextField))
                    .addGroup(CompareViewLayout.createSequentialGroup()
                        .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LoadCongressButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(list1OptionsLabel)
                                .addComponent(list1UseCurrentPartitionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(list1LoadPartitionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                            .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(list2OptionsLabel)
                                .addComponent(list2UseCurrentPartitionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(list2LoadPartitionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addComponent(currentMPsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompareViewLayout.createSequentialGroup()
                        .addComponent(compareButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(46, 46, 46)))
                .addContainerGap())
        );
        CompareViewLayout.setVerticalGroup(
            CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompareViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CompareViewLayout.createSequentialGroup()
                        .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentLoadedCongressLabel)
                            .addComponent(currentCongressNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CompareViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CompareViewLayout.createSequentialGroup()
                                .addComponent(LoadCongressButton)
                                .addGap(35, 35, 35)
                                .addComponent(list1OptionsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list1UseCurrentPartitionButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list1LoadPartitionButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list2OptionsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list2UseCurrentPartitionButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list2LoadPartitionButton))
                            .addComponent(currentMPsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(compareButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CommunityPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CommunityPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainWindow.addTab("Compare", CompareView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindow)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindow, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMPToCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMPToCommunityButtonActionPerformed
        // TODO add mp to communtiy button pressed
    }//GEN-LAST:event_addMPToCommunityButtonActionPerformed

    private void deleteMPfromCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMPfromCommunityButtonActionPerformed
        // TODO community management delete mp from communtiy button pressed

    }//GEN-LAST:event_deleteMPfromCommunityButtonActionPerformed

    
    public void updateMPManagementMPTable()
    {
        JSONObject j = pc.getMPList();
        DefaultTableModel dtm = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        JSONArray ja = (JSONArray)j.getJSONByKey("MPList");


        //Create columns
        JSONObject jattrd = pc.getAttrDefs();
        JSONArray a = ((JSONArray)jattrd.getJSONByKey("Attribute Definitions"));

        dtm.addColumn("State");
        dtm.addColumn("District");



        for(JSON jo:a.getArray()){
            dtm.addColumn(((JSONString)((JSONObject)jo).getJSONByKey("AttrDefName")).getValue());
        }


        for(JSON jo:ja.getArray()){
                
            Map<String,String> ms = ((JSONObject)jo).basicJSONObjectGetInfo();

                Vector<String> row = new Vector<String>();
                for(int cnum=0;cnum<dtm.getColumnCount();cnum++) {
                    String s = dtm.getColumnName(cnum);
                    if (ms.containsKey(s)) {
                        row.add(ms.get(s));
                    }else{
                        row.add("-");
                    }
                }
                dtm.addRow(row);


            }
            
        currentMPsTable.setModel(dtm);
        currentMPsTable.getTableHeader().setReorderingAllowed(false);

    }
    
    public void updateMPManagementAttrDefinitionTable()
    {
        DefaultTableModel adtm = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        adtm.addColumn("AttrDefName");
        adtm.addColumn("AttrDefImportance");

        JSONObject jotd = pc.getAttrDefs();
        JSONArray jatd = ((JSONArray)jotd.getJSONByKey("Attribute Definitions"));

        for(JSON element:jatd.getArray()){

            Map<String,String> ms = ((JSONObject)element).basicJSONObjectGetInfo();
            Vector<String> row = new Vector<String>();
            for(int pos = 0;pos<jatd.getArray().size();pos++){
                row.add(ms.get("AttrDefName"));
                String imp = ms.get("AttrDefImportance");
                if(imp.equals("1")) imp = "Low";
                else if(imp.equals("4")) imp = "Medium";
                else if(imp.equals("16")) imp = "High";
                else throw new IllegalStateException("UNKNOWN Attribute definition importance");
                row.add(imp);
            }

            adtm.addRow(row);

        }

            attrDefinitionsTable.setModel(adtm);
            attrDefinitionsTable.getTableHeader().setReorderingAllowed(false);
    }

    private void compareWindowMPShortTable()
    {
        JSONObject j = pc.getShortMPList();
            //MPsCurrentCongressTable
            DefaultTableModel model = (DefaultTableModel)MPsCurrentCongressTable.getModel();
            DefaultTableModel dtm = new DefaultTableModel();
            JSONArray ja = (JSONArray)j.getJSONByKey("MPList");

            //Create columns
            dtm.addColumn("District");
            dtm.addColumn("State");


            for(JSON jo:ja.getArray()){
                
                Map<String,String> ms = ((JSONObject)jo).basicJSONObjectGetInfo();

                Vector<String> row = new Vector<>();
                for(int pos = 0;pos<ja.getArray().size();pos++){
                    String s = dtm.getColumnName(pos);
                    if(ms.containsKey(s)){
                        row.add(ms.get(s));
                    }
                }
                
                dtm.addRow(row);
                
            }
            
            MPsCurrentCongressTable.setModel(dtm);
    }
    
    private void mainWindowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainWindowStateChanged
        // TODO code for initializing when we change the window
        // In this function goes the code that needs to be executed when we change the window
        //the winows are numbered 0..n-1 in their order on the top
        //There are implementations of an initialization on the code below
        System.out.println("CANVI DE PESTANYA "+ mainWindow.getSelectedIndex());
        
        
        if(mainWindow.getSelectedIndex()==1){//If we are on the MP management Window
            //////INITIALIZING THE MP TABLE
            updateMPManagementMPTable();
            ///INITIALIZE ATTR DEFINITION TABLE
             updateMPManagementAttrDefinitionTable();
            ///FINISHING ATTR DEFINITION TABLE
        }
        
        
        
        if(mainWindow.getSelectedIndex()==3){//If we are on the compare window
            compareWindowMPShortTable();
        }
    }//GEN-LAST:event_mainWindowStateChanged

    private void addMPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMPButtonActionPerformed
        // TODO MP management addMP button pressed
        JFrame jf = new AddMPWindow(pc,this);
        jf.setVisible(true);
        jf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_addMPButtonActionPerformed

    private void modifyMPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyMPButtonActionPerformed
        //System.out.println(currentMPsTable.getSelectedRow());
        int fila = currentMPsTable.getSelectedRow();
        if(fila == -1){
            JOptionPane.showMessageDialog(new JFrame(), "No row selected");
            return;
        }
        //columna 0 estat
        //columna 1 districte
        String state = (String)currentMPsTable.getValueAt(fila,0);
        String district = (String) currentMPsTable.getValueAt(fila, 1);
        //Obtenim els valors dels atributs
        JFrame jf = new ModifyMPWindow(pc,this,State.valueOf(state),Integer.parseInt(district));
        jf.setVisible(true);
        jf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.updateMPManagementMPTable();
    }//GEN-LAST:event_modifyMPButtonActionPerformed

    private void deleteMPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMPButtonActionPerformed
        // TODO MP management delete MP button pressed
        //System.out.println(currentMPsTable.getSelectedRow());
        int fila = currentMPsTable.getSelectedRow();
        if(fila == -1){
            JOptionPane.showMessageDialog(new JFrame(), "No row selected");
            return;
        }
        //columna 0 estat
        //columna 1 districte
        String state = (String)currentMPsTable.getValueAt(fila,0);
        String district = (String) currentMPsTable.getValueAt(fila, 1);
        pc.deleteMP(State.valueOf(state), Integer.parseInt(district));
        this.updateMPManagementMPTable();
    }//GEN-LAST:event_deleteMPButtonActionPerformed

    private void loadCongressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCongressButtonActionPerformed
        // TODO MP management load congress button pressed
    }//GEN-LAST:event_loadCongressButtonActionPerformed

    private void saveCongressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCongressButtonActionPerformed
        // TODO MP management save congress button pressed
    }//GEN-LAST:event_saveCongressButtonActionPerformed

    private void newCongressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCongressButtonActionPerformed
        // TODO MP management new congress button pressed
        pc.newCongress();
        updateMPManagementAttrDefinitionTable();
        updateMPManagementMPTable();
    }//GEN-LAST:event_newCongressButtonActionPerformed

    private void newAttrDefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAttrDefButtonActionPerformed
        // TODO mp management screen new attr definition button pressed
        JFrame jf = new AddAttributeDefinition(pc,this);
        jf.setVisible(true);
        jf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_newAttrDefButtonActionPerformed

    private void modifyAttrDefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyAttrDefButtonActionPerformed
        // TODO mp management modify attr def button action performed
    }//GEN-LAST:event_modifyAttrDefButtonActionPerformed

    private void deleteAttrDefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAttrDefButtonActionPerformed
        // TODO mp management delete attr definition button pressed
    }//GEN-LAST:event_deleteAttrDefButtonActionPerformed

    private void showMPDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMPDataButtonActionPerformed
        // TODO community management show selected mp info button
    }//GEN-LAST:event_showMPDataButtonActionPerformed

    private void loadPartitionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadPartitionButtonActionPerformed
        // TODO community management load partition button pressed
    }//GEN-LAST:event_loadPartitionButtonActionPerformed

    private void savePartitionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePartitionButtonActionPerformed
        // TODO communtiy management save partition button pressed
    }//GEN-LAST:event_savePartitionButtonActionPerformed

    private void calculateCommunitiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateCommunitiesButtonActionPerformed
        // TODO communtiy management calculate communities button pressed
        calculateCommunitiesButton.setEnabled(false);
        CalculateCommunitiesSwingWorker sw = new CalculateCommunitiesSwingWorker();
        sw.execute();
    }//GEN-LAST:event_calculateCommunitiesButtonActionPerformed
    private CalculateCommunitiesSwingWorker sumSwingWorker;
    private class CalculateCommunitiesSwingWorker extends SwingWorker<String,Integer> {
        // doInBackground method is executed in special thread. out of GUI thread.
        // We must NOT manipulate with GUI components
        @Override
        protected String doInBackground() throws Exception {
            int result = 0;
            for(int i=0; i <= 100; i++) {
                // simulate long time operation
                Thread.sleep(20);
                result += i;
                // call process function
                publish(i);
            }
            return "" + result;
        }
        // done method is executed in GUI thread.
        // We can manipulate with GUI components
        @Override
        protected void done() {
            calculateCommunitiesButton.setEnabled(true);
            try {
                // get method get us result from do in background
                JOptionPane.showMessageDialog(null, "Result is " + get());
            } catch (ExecutionException ex) {
                JOptionPane.showMessageDialog(null,"Error");
            } catch (InterruptedException ex) {
                throw new RuntimeException("Operation interrupted (this should never happen)",ex);
            }
        }
        // process method is executed in GUI thread.
        // We can manipulate with GUI components
        @Override
        protected void process(List<Integer> chunks) {
            algorithmProgressBar.setValue(chunks.get(chunks.size()-1));
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>



        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PresentationController prescon = new PresentationController();
                new MainView(prescon).setVisible(true);
            }
        });
    }

    private PresentationController pc;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CommunityManagement;
    private javax.swing.JPanel CommunityPanel1;
    private javax.swing.JPanel CommunityPanel2;
    private javax.swing.JPanel CompareView;
    private javax.swing.JButton LoadCongressButton;
    private javax.swing.JTable MPList1Table;
    private javax.swing.JTable MPList2Table;
    private javax.swing.JScrollPane MPTablePanel;
    private javax.swing.JTable MPsCurrentCongressTable;
    private javax.swing.JTable MPsInCommunityTable;
    private javax.swing.JScrollPane MPsInCommuntiyPanel;
    private javax.swing.JLabel MPsInCurrentCongressLabel;
    private javax.swing.JButton addMPButton;
    private javax.swing.JButton addMPToCommunityButton;
    private javax.swing.JLabel algorithmLabel;
    private javax.swing.JProgressBar algorithmProgressBar;
    private javax.swing.JLabel argumentLabel;
    private javax.swing.JTextField argumentTextField;
    private javax.swing.JScrollPane attrDefPanel;
    private javax.swing.JLabel attrDefinitionsLabel;
    private javax.swing.JPanel attrDefinitionsPanel;
    private javax.swing.JTable attrDefinitionsTable;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton calculateCommunitiesButton;
    private javax.swing.JComboBox chooseAlgorithmComboBox;
    private javax.swing.JPanel communitiesPanel;
    private javax.swing.JTable communitiesTable;
    private javax.swing.JScrollPane communitiesTablePanel;
    private javax.swing.JList communityList1CommunitiesList;
    private javax.swing.JList communityList2CommunitiesList;
    private javax.swing.JButton compareButton;
    private javax.swing.JPanel congressManagementView;
    private javax.swing.JLabel currentCongressLabel;
    private javax.swing.JTextField currentCongressNameTextField;
    private javax.swing.JLabel currentLoadedCongressLabel;
    private javax.swing.JPanel currentMPsPanel;
    private javax.swing.JTable currentMPsTable;
    private javax.swing.JButton deleteAttrDefButton;
    private javax.swing.JButton deleteMPButton;
    private javax.swing.JButton deleteMPfromCommunityButton;
    private javax.swing.JLabel labelCommunities;
    private javax.swing.JLabel labelMPs;
    private javax.swing.JLabel list1Label1;
    private javax.swing.JLabel list1Label2;
    private javax.swing.JButton list1LoadPartitionButton;
    private javax.swing.JLabel list1OptionsLabel;
    private javax.swing.JButton list1UseCurrentPartitionButton;
    private javax.swing.JLabel list2Label1;
    private javax.swing.JLabel list2Label2;
    private javax.swing.JButton list2LoadPartitionButton;
    private javax.swing.JLabel list2OptionsLabel;
    private javax.swing.JButton list2UseCurrentPartitionButton;
    private javax.swing.JButton loadCongressButton;
    private javax.swing.JButton loadPartitionButton;
    private javax.swing.JPanel mainView;
    private javax.swing.JTabbedPane mainWindow;
    private javax.swing.JButton modifyAttrDefButton;
    private javax.swing.JButton modifyMPButton;
    private javax.swing.JButton newAttrDefButton;
    private javax.swing.JButton newCongressButton;
    private javax.swing.JButton saveCongressButton;
    private javax.swing.JButton savePartitionButton;
    private javax.swing.JScrollPane scrollPaneCommunityList1;
    private javax.swing.JScrollPane scrollPaneCommuntiyList2;
    private javax.swing.JScrollPane scrollPaneMPList1;
    private javax.swing.JScrollPane scrollPaneMPList2;
    private javax.swing.JScrollPane scrollPaneMPsCurrentCongressTable;
    private javax.swing.JButton showMPDataButton;
    private javax.swing.JButton showSelectedMPInfoButton;
    // End of variables declaration//GEN-END:variables
}
